"use strict";(this.webpackChunkschemas=this.webpackChunkschemas||[]).push([[960],{960:(e,t,s)=>{s.r(t),s.d(t,{default:()=>o});const o={NCBI_Pathogen_BIOSAMPLE:{fileType:"xls",status:"published",method:function(e){const t=new Map([["sample_name",[]],["sample_title",[]],["bioproject_accession",[]],["organism",[]],["strain",[]],["isolate",[]],["collected_by",[]],["collection_date",[]],["geo_loc_name",[]],["host",[]],["host_disease",[]],["isolation_source",[]],["lat_lon",[]],["culture_collection",[]],["genotype",[]],["host_age",[]],["host_description",[]],["host_disease_outcome",[]],["host_disease_stage",[]],["host_health_state",[]],["host_sex",[]],["host_subject_id",[]],["host_tissue_sampled",[]],["passage_history",[]],["pathotype",[]],["serotype",[]],["serovar",[]],["specimen_voucher",[]],["subgroup",[]],["subtype",[]],["description",[]]]),s=e.slots,o=e.getFieldNameMap(s);e.getHeaderMap(t,s,"NCBI_Pathogen_BIOSAMPLE");const a=[[...t.keys()]];for(const i of e.getTrimmedData(e.hot)){const n=[];for(const[a,_]of t){let t;if("host_description"===a){const e=i[o.symptom_onset_date];t=e?`Symptom onset date: ${e}`:""}else t=e.getMappedField(a,i,_,s,o,":","NCBI_Pathogen_BIOSAMPLE");n.push(t)}a.push(n)}return a}},NCBI_SRA:{fileType:"xlsx",status:"published",method:function(e){const t=new Map([["sample_name",[]],["library_ID",[]],["title",[]],["library_strategy",[]],["library_source",[]],["library_selection",[]],["library_layout",[]],["platform",[]],["instrument_model",[]],["design_description",[]],["filetype",[]],["filename",[]],["filename2",[]],["filename3",[]],["filename4",[]],["assembly",[]],["fasta_file",[]]]),s=[[...t.keys()]],o=e.slots,a=e.getFieldNameMap(o);e.getHeaderMap(t,o,"NCBI_SRA");for(const i of e.getTrimmedData(e.hot)){const n=[];let _;for(const[s,l]of t)_=e.getMappedField(s,i,l,o,a,"; ","NCBI_SRA"),n.push(_);s.push(n)}return s}},ENA_ERC000033_Virus_SAMPLE:{fileType:"xls",status:"published",method:function(e){const t=new Map([["sample storage conditions",[]],["subject exposure",[]],["type exposure",[]],["personal protective equipment",[]],["hospitalisation",[]],["illness duration",[]],["illness symptoms",[]],["collection date",[]],["geographic location (latitude)",[]],["geographic location (longitude)",[]],["geographic location (region and locality)",[]],["subject exposure duration",[]],["sample capture status",[]],["geographic location (country and/or sea)",[]],["host disease outcome",[]],["host common name",[]],["host subject id",[]],["host age",[]],["host health state",[]],["host sex",[]],["lab_host",[]],["host scientific name",[]],["virus identifier",[]],["collector name",[]],["collecting institution",[]],["receipt date",[]],["definition for seropositive sample",[]],["serotype (required for a seropositive sample)",[]],["isolate",[]],["strain",[]],["host habitat",[]],["isolation source host-associated",[]],["host description",[]],["gravidity",[]],["host behaviour",[]],["isolation source non-host-associated",[]]]),s=e.slots,o=e.getFieldNameMap(s);e.getHeaderMap(t,s,"ENA_ERC000033_Virus_SAMPLE");const a=[[...t.keys()]];for(const i of e.getTrimmedData(e.hot)){const n=[];for(const[a,_]of t){let t;if("sample capture status"===a){const e=i[o.purpose_of_sampling],s=new Set(["Cluster/outbreak detection","Multi-jurisdictional outbreak investigation","Intra-jurisdictional outbreak investigation"]),a=new Set(["Baseline surveillance (random sampling)","Targeted surveillance (non-random sampling)","Priority surveillance project","Longitudinal surveillance (repeat sampling of individuals)","Re-infection surveillance","Vaccine escape surveillance","Travel-associated surveillance"]);t=s.has(e)?"active surveillance in response to outbreak":a.has(e)?"active surveillance not initiated by an outbreak":"other"}else if("hospitalisation"===a){const e=i[o["host health status details"]];t=new Set(["Hospitalized","Hospitalized (Non-ICU)","Hospitalized (ICU)","Medically Isolated","Medically Isolated (Negative Pressure)"]).has(e)?"yes":""}else t=e.getMappedField(a,i,_,s,o,":","ENA_ERC000033_Virus_SAMPLE");n.push(t)}a.push(n)}return a}},GISAID:{fileType:"xls",status:"published",method:function(e){const t=[["Submitter",[]],["FASTA filename",[]],["Virus name",[]],["Passage details/history",[]],["Collection date",[]],["Location",[]],["Additional location information",[]],["Host",[]],["Additional host information",[]],["Sampling Strategy",[]],["Gender",[]],["Patient age",[]],["Patient status",[]],["Specimen source",[]],["Outbreak",[]],["Last vaccinated",[]],["Treatment",[]],["Sequencing technology",[]],["Assembly method",[]],["Depth of coverage",["depth_of_coverage_value"]],["Originating lab",[]],["Address",["sample_collector_contact_address"]],["Sample ID given by the sample provider",[]],["Submitting lab",[]],["Address",["sequence_submitter_contact_address"]],["Sample ID given by the submitting laboratory",["specimen_collector_sample_id"]],["Authors",[]]],s=e.slots,o=e.getFieldNameMap(s);e.getHeaderMap(t,s,"GISAID");const a=[Array.from(t,(e=>e[0]))];for(const i of e.getTrimmedData(e.hot)){const e=[];for(const[a]of t.entries()){const n=t[a][0],_=t[a][1];if("Type"===n){e.push("betacoronavirus");continue}const l=[];for(const e of _){let t=o[e],a=i[t];if(!a)continue;const n=s[t],c=a.toLowerCase().trim();if("specimen processing"===n.fieldName){if(!c.split(";").includes("virus passage"))continue;a="Virus passage"}if(n.dataStatus&&n.dataStatus.map((e=>e.toLowerCase().trim())).includes(c)){if(_.length>1)continue;a="Unknown"}"passage number"===n.fieldName&&(a="passage number "+a),l.push(a)}"Assembly method"===n?e.push(l.join(" ")):e.push(l.join(";"))}a.push(e)}return a.splice(0,0,["submitter","fn","pox_virus_name","pox_passage","pox_collection_date","pox_location","pox_add_location","pox_host","pox_add_host_info","pox_sampling_strategy","pox_gender","pox_patient_age","pox_patient_status","pox_specimen","pox_outbreak","pox_last_vaccinated","pox_treatment","pox_seq_technology","pox_assembly_method","pox_coverage","pox_orig_lab","pox_orig_lab_addr","pox_provider_sample_id","pox_subm_lab","pox_subm_lab_addr","pox_subm_sample_id","pox_authors"]),a}},NML_LIMS:{fileType:"csv",pertains_to:["Mpox"],status:"published",method:function(e){const t=new Map([["TEXT_ID",[]],["PH_CASE_ID",[]],["PH_RELATED_PRIMARY_ID",[]],["CUSTOMER",[]],["PH_SEQUENCING_CENTRE",[]],["PH_SEQUENCE_SUBMITTER",[]],["HC_COLLECT_DATE",[]],["HC_TEXT2",[]],["HC_COUNTRY",[]],["HC_PROVINCE",[]],["HC_CURRENT_ID",[]],["SUBMISSIONS - BioProject Accession",[]],["SUBMISSIONS - BioSample Accession",[]],["SUBMISSIONS - SRA Accession",[]],["SUBMISSIONS - GenBank Accession",[]],["SUBMISSIONS - GISAID Virus Name",[]],["SUBMISSIONS - GISAID Accession",[]],["HC_SAMPLE_CATEGORY",[]],["PH_SAMPLING_DETAILS",[]],["PH_SPECIMEN_TYPE",[]],["PH_RELATED_RELATIONSHIP_TYPE",[]],["PH_ISOLATION_SITE_DESC",[]],["PH_ISOLATION_SITE",[]],["PH_SPECIMEN_SOURCE",[]],["PH_SPECIMEN_SOURCE_DESC",[]],["PH_SPECIMEN_TYPE_ORIG",[]],["COLLECTION_METHOD",[]],["PH_ANIMAL_TYPE",[]],["PH_HOST_HEALTH",[]],["PH_HOST_HEALTH_DETAILS",[]],["PH_HOST_HEALTH_OUTCOME",[]],["PH_HOST_DISEASE",[]],["PH_AGE",[]],["PH_AGE_UNIT",[]],["PH_AGE_GROUP",[]],["VD_SEX",[]],["PH_HOST_COUNTRY",[]],["PH_HOST_PROVINCE",[]],["HC_ONSET_DATE",[]],["HC_SYMPTOMS",[]],["PH_VACCINATION_HISTORY",[]],["VE_SYMP_AVAIL",[]],["PH_EXPOSURE_COUNTRY",[]],["PH_TRAVEL",[]],["PH_EXPOSURE",[]],["PH_EXPOSURE_DETAILS",[]],["PH_HOST_ROLE",[]],["PH_REASON_FOR_SEQUENCING",[]],["PH_REASON_FOR_SEQUENCING_DETAILS",[]],["PH_SEQUENCING_DATE",[]],["PH_LIBRARY_PREP_KIT",[]],["PH_SEQUENCING_INSTRUMENT",[]],["PH_TESTING_PROTOCOL",[]],["PH_RAW_SEQUENCE_METHOD",[]],["PH_DEHOSTING_METHOD",[]],["PH_CONSENSUS_SEQUENCE",[]],["PH_CONSENSUS_SEQUENCE_VERSION",[]],["PH_BIOINFORMATICS_PROTOCOL",[]],["SUBMITTED_RESLT - Gene Target #1",[]],["SUBMITTED_RESLT - Gene Target #1 CT Value",[]],["SUBMITTED_RESLT - Gene Target #2",[]],["SUBMITTED_RESLT - Gene Target #2 CT Value",[]],["SUBMITTED_RESLT - Gene Target #3",[]],["SUBMITTED_RESLT - Gene Target #3 CT Value",[]],["SUBMITTED_RESLT - Gene Target #4",[]],["SUBMITTED_RESLT - Gene Target #4 CT Value",[]],["SUBMITTED_RESLT - Gene Target #5",[]],["SUBMITTED_RESLT - Gene Target #5 CT Value",[]],["PH_SEQUENCING_AUTHORS",[]],["HC_COMMENTS",[]],["sample collector contact email",[]],["sample collector contact address",[]],["sequenced by contact email",[]],["sequenced by contact address",[]],["sequence submitter contact email",[]],["sequence submitter contact address",[]],["sample received date",[]],["host (scientific name)",[]],["geo_loc_name (city)",[]],["breadth of coverage value",[]],["depth of coverage value",[]],["depth of coverage threshold",[]],["number of base pairs sequenced",[]],["consensus genome length",[]]]),s=e.slots,o=e.getFieldNameMap(s),a=e.getFieldTitleMap(s);e.getHeaderMap(t,s,"NML_LIMS");const i=[[...t.keys()]],n=new Map([["not applicable","Not Applicable"],["missing","Missing"],["not collected","Not Collected"],["not provided","Not Provided"],["restricted access","Restricted Access"]]),_=new Set(["Not Applicable","Missing","Not Collected","Not Provided","Restricted Access"]);for(const l of e.getTrimmedData(e.hot)){const c=[];for(const[i,r]of t){if("HC_CURRENT_ID"===i){c.push("Monkeypox virus");continue}if("VE_SYMP_AVAIL"===i){const e=l[a["signs and symptoms"]]||"";c.push(e?"Y":"N");continue}if("HC_COLLECT_DATE"===i){let t=l[a["sample collection date"]]||"";const s=l[a["sample collection date precision"]];c.push(e.setDateChange(s,t,"01"));continue}if("PH_SPECIMEN_SOURCE"===i){let e="";for(const t of["host (scientific name)","host (common name)","environmental material","environmental site"]){const s=l[a[t]];if(s&&!_.has(s)){if("host (scientific name)"===t||"host (common name)"===t){e="Homo sapiens"===s||"Human"===s?"Human":"ANIMAL";break}if("environmental material"===t||"environmental site"===t){e="ENVIRO";break}}}c.push(e);continue}let t=e.getMappedField(i,l,r,s,o,";","NML_LIMS"),p=t.split(";");if(p=p.map((t=>e.fixNullOptionCase(t.trim(),n))),p.length>1){let e=new Set(p);_.forEach(Set.prototype.delete,e),0==e.size&&(e=new Set(p)),p=[...e]}t=p.join(";"),c.push(t)}i.push(c)}return i}}}}}]);